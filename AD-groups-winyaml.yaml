---
- name: Enable Unix Group
  hosts: all
  gather_facts: no
  vars:
    vmName: "azl-invalid-s11"
    tRanLow: 1892155692
    tRandHigh: 1892999999
    newGroupName: "{{ NewGroupName }}"
  tasks:
    - name: Generate unique GID
      ansible.windows.win_shell: |
        $tRanLow = 1892155692
        $tRandHigh = 1892999999
        $Unique = $false
        do {
          $NewUID = Get-Random -Minimum $tRanLow -Maximum $tRandHigh
          $tUIDCheck = get-aduser -property * -filter {uidNumber -eq $NewUID} -SearchBase 'DC=carefirst,DC=com'
          $tGIDCheck = get-adgroup -property * -filter {gidNumber -eq $NewUID} -SearchBase 'DC=carefirst,DC=com'
          If (($tUIDCheck -eq $null) -and ($tGIDCheck -eq $null)) {
            $Unique = $true
          }
        } while ($Unique -ne $true)
        echo $NewUID
      register: unique_gid
      changed_when: unique_gid.stdout != ""

    - name: Set GID for the group
      ansible.windows.win_shell: |
        $TargetGroup = Get-ADGroup {{ NewGroupName }} -property *
        If (($TargetGroup) -and !($TargetGroup.gidNumber)) {
          Set-AdGroup $TargetGroup.DistinguishedName -replace @{gidNumber = {{ unique_gid.stdout }} }
        } else {
          If ($TargetGroup.gidNumber) {
            Write-Host -ForegroundColor RED "The Group is already unix enabled with gid: $TargetGroup.gidNumber"
          } else {
            Write-Host -ForegroundColor RED "The Group name is invalid or does not exist in AD: {{ NewGroupName }}"
          }
        }
      vars:
        NewGroupName: "{{ vmName }}"

    - name: Create output statement
      set_fact:
        output_statement: "Server Built Today by: {{ ansible_env.USER }}"

    - name: Write output to file
      ansible.builtin.win_lineinfile:
        path: "{{ output_statement }}"
        path: "C:\\temp\\{{ vm_name }}.txt"

    - name: Define OU path and group prefixes
      set_fact:
        ou_path: "OU=VRA Groups, OU=Access Groups, OU=Groups,OU=Corporate,DC=carefirst,DC=com"
        group_prefixes:
          - "JITA-"
          - "AUTH-"
          - "SVCA-"

    - name: Create AD groups
      ansible.windows.win_shell: |
        foreach ($GroupPrefix in {{ GroupPrefixes }}) {
          $NewGroupName = ($GroupPrefix + $vmName).tolower()
          $tCheck Get-ADGroup -filter "Name -like '*$NewGroupName'"
           if ($tCheck) {
             Write-Host -ForegroundColor BLUE "Group already exists in AD. Skipping: $NewGroupName"
           } else {
               New-ADGroup -Name $NewGroupName -SamAccountName $NewGroupName -GroupCategory Security -GroupScope Global -Path {{ ouPath }}
            }
          If ($GroupPrefix -eq "JITA-" -or $GroupPrefix -eq "SVCA-") {
            do {
              Start-Sleep 5
              $TargetGroup = Get-ADGroup -filter "Name -like '*$NewGroupName'"
            } while ($TargetGroup -eq $null)
            Enable-UnixGroup $NewGroupName
          }
        }
      loop: "{{ group_prefixes }}"
